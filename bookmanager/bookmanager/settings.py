"""
Django settings for bookmanager project.

Generated by 'django-admin startproject' using Django 2.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
#os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
#__file__
# print(__file__)
# /home/ubuntu/Desktop/40/code/bookmanager/bookmanager/settings.py
# os.path.abspath(__file__)
# dirname 目录
# /home/ubuntu/Desktop/40/code/bookmanager/

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'qkgwa-j2_7syo&e$$*!6_@-_&0mjt5$n-q24gw!0o65q8vb*#o'

# SECURITY WARNING: don't run with debug turned on in production!
# 调试
#我们在开发的时候 是需要设置debug=True
DEBUG = True

#当我们不进行调试的时候，需要设置　允许我们以什么方式来访问
# 我们想在浏览器中　以　１２７．０．０．１：８０００的形式访问．把ＩＰ地址或者域名　添加进来
ALLOWED_HOSTS = ['127.0.0.1']

# ALLOWED_HOSTS = ['*']   * 以ip 域名都可以 不建议使用


# Application definition
# python manage.py startapp 子应用名

# 安装子应用 (注册子应用)
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 我先不注册,先埋个雷
    # 方式1  子应用的名字
    'book',
    # 方式2
    # 'book.apps.BookConfig'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# 工程的总路由
ROOT_URLCONF = 'bookmanager.urls'

# 和模板相关的配置
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 告知系统 模板路径在哪里
        # os.path.join 拼接路径
        # BASE_DIR  明天讲解到底是哪里
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bookmanager.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# sqlite3 也是一个关系型数据
# 我们当前只是一个过渡方案
# 明天会配置为mysql

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-Hans'#'en-us'

TIME_ZONE = 'Asia/Shanghai'#'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

# 访问静态资源是不需要单独在 urls中添加路由的
# 我们是通过 ip:port/STATIC_URL + 文件路径
STATIC_URL = '/ooooo/'

# 告知系统我们的静态资源在哪里
STATICFILES_DIRS = [
    os.path.join(BASE_DIR,'static')
]
